export interface ImageInterface {
    __corner :number|string|any;
    _filterScalingX :number;
    _filterScalingY :number;
    _lastScaleX :number;
    _lastScaleY :number;
    absolutePositioned :boolean;
    angle :number;
    backgroundColor :string;
    borderColor :string;
    borderDashArray :any[];
    borderOpacityWhenMoving :number;
    borderScaleFactor :number;
    cacheKey :string;
    cacheProperties :any[];
    centeredRotation :boolean;
    centeredScaling :boolean;
    clipTo :Function;
    cornerColor :string
    cornerDashArray :any[];
    cornerSize :number;
    cornerStrokeColor :string;
    cornerStyle :string;
    cropX :number;
    cropY :number;
    crossOrigin :string;
    dirty :boolean;
    evented :boolean;
    excludeFromExport :boolean;
    fill :string;
    fillRule :string;
    flipX :boolean;
    flipY :boolean;
    globalCompositeOperation :string;
    hasBorders :boolean;
    hasControls :boolean;
    hasRotatingPoint :boolean;
    height :number;
    hoverCursor :string;
    includeDefaultValues :boolean;
    inverted :boolean;
    left :number;
    lockMovementX :boolean;
    lockMovementY :boolean;
    lockRotation :boolean;
    lockScalingFlip :boolean;
    lockScalingX :boolean;
    lockScalingY :boolean;
    lockSkewingX :boolean;
    lockSkewingY :boolean;
    lockUniScaling :boolean;
    minimumScaleTrigger :number;
    minScaleLimit :number;
    moveCursor :string;
    noScaleCache :boolean;
    objectCaching :boolean;
    opacity :number;
    originX :string;
    originY :string;
    padding :number;
    paintFirst :string;
    perPixelTargetFind :boolean;
    rotatingPointOffset :number;
    scaleX :number;
    scaleY :number;
    selectable :boolean;
    selectionBackgroundColor :string;
    skewX :number;
    skewY :number;
    statefullCache :boolean;
    stateProperties :any[];
    stroke :string;
    strokeDashArray :any[];
    strokeDashOffset :number;
    strokeLineCap :string;
    strokeLineJoin :string;
    strokeMiterLimit :number;
    strokeWidth :number;
    top :number;
    transformMatrix :any[];
    transparentCorners :boolean;
    type :string;
    visible :boolean;
    width :number;
}

export interface DataURLOptions{
    format?:string;
    quality?:number;
    multiplier?:number;
    left?:number;
    top?:number;
    width?:number;
    height?:number;
    enableRetinaScaling?:boolean;
    withoutTransform?:boolean;
    withoutShadow?:boolean;
}
